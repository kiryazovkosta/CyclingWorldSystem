// ------------------------------------------------------------------------------------------------
//  <copyright file="ParseGpxFileCommandHandlerTests.cs" company="Business Management System Ltd.">
//      Copyright "2023" (c), Business Management System Ltd.
//      All rights reserved.
//  </copyright>
//  <author>Kosta.Kiryazov</author>
// ------------------------------------------------------------------------------------------------

namespace Tests.ApplicationTests.Entities.GpxFiles.Commands;

using Application.Entities.GpxFiles.Commands.ParseGpxFile;
using Application.Entities.GpxFiles.Models;
using Application.Interfaces;
using Application.Services;
using Domain.Repositories;
using Domain.Repositories.Abstractions;
using Mapster;
using Moq;
using Persistence;

public class ParseGpxFileCommandHandlerTests : IDisposable
{
    private readonly ApplicationDbContext _context = ApplicationDbContextTestFactory.Create();
    private readonly IGpxService gpxService = new GpxService();
    private readonly IGeoCoordinate geoCoordinateService = new GeoCoordinate();
    private readonly Mock<IWaypointRepository> waypointRepository = new();
    private readonly Mock<IUnitOfWork> unitOfWork = new();

    public void Dispose()
    {
        this._context.Dispose();
    }
    
    [Fact]
    public void Ctor_Throws_ArgumentNullExceptionWhenIGpxServiceIsNull()
    {
        //Arrange & Act
        Func<ParseGpxFileCommandHandler> act = () => new ParseGpxFileCommandHandler(
            null!,
            this.geoCoordinateService,
            this.waypointRepository.Object,
            this.unitOfWork.Object);

        //Assert
        ArgumentNullException exception = Assert.Throws<ArgumentNullException>(act);
        Assert.Equal("Value cannot be null. (Parameter 'gpxService')", exception.Message);
    }
    
    [Fact]
    public void Ctor_Throws_ArgumentNullExceptionWhenIGeoCoordinateServiceIsNull()
    {
        //Arrange & Act
        Func<ParseGpxFileCommandHandler> act = () => new ParseGpxFileCommandHandler(
            this.gpxService,
            null!,
            this.waypointRepository.Object,
            this.unitOfWork.Object);

        //Assert
        ArgumentNullException exception = Assert.Throws<ArgumentNullException>(act);
        Assert.Equal("Value cannot be null. (Parameter 'geoCoordinateService')", exception.Message);
    }
    
    [Fact]
    public void Ctor_Throws_ArgumentNullExceptionWhenICurrentUserServiceIsNull()
    {
        //Arrange & Act
        Func<ParseGpxFileCommandHandler> act = () => new ParseGpxFileCommandHandler(
            this.gpxService,
            this.geoCoordinateService,
            null!,
            this.unitOfWork.Object);

        //Assert
        ArgumentNullException exception = Assert.Throws<ArgumentNullException>(act);
        Assert.Equal("Value cannot be null. (Parameter 'waypointRepository')", exception.Message);
    }
    
    [Fact]
    public void Ctor_Throws_ArgumentNullExceptionWhenUnitOfWorkIsNull()
    {
        //Arrange & Act
        Func<ParseGpxFileCommandHandler> act = () => new ParseGpxFileCommandHandler(
            this.gpxService,
            this.geoCoordinateService,
            this.waypointRepository.Object,
            null!);

        //Assert
        ArgumentNullException exception = Assert.Throws<ArgumentNullException>(act);
        Assert.Equal("Value cannot be null. (Parameter 'unitOfWork')", exception.Message);
    }
    
    [Fact]
    public async Task  Handle_Should_ReturnSuccessWhenInputIsValid()
    {
        //Arrange
        var handler = new ParseGpxFileCommandHandler(
            this.gpxService,
            this.geoCoordinateService,
            this.waypointRepository.Object,
            this.unitOfWork.Object);
        var request = new GpxFileRequest(
            "");
        var command = request.Adapt<ParseGpxFileCommand>();
        // Act
        var result = await handler.Handle(command, CancellationToken.None);
            
        //Assert
        Assert.True(result.IsSuccess);
        Assert.False(result.IsFailure);
        var response = result.Value;
        Assert.Equal(0m, response.NegativeElevation);
        Assert.Equal(0.8m, response.PositiveElevation);
    }
}